#!/usr/bin/env bash

# fix segmentation fault reported in https://github.com/k2-fsa/icefall/issues/674
export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
. ../../../tools/activate_python.sh

set -eou pipefail

nj=15
stage=-1
stop_stage=100

# We assume dl_dir (download dir) contains the following
# directories and files. If not, they will be downloaded
# by this script automatically.
#
#  - $dl_dir/l2arctic
#      You can find BOOKS.TXT, test-clean, train-clean-360, etc, inside it.
#      You can download them from https://www.openslr.org/12
#
#  - $dl_dir/lm
#      This directory contains the following files downloaded from
#       http://www.openslr.org/resources/11
#
#        - 3-gram.pruned.1e-7.arpa.gz
#        - 3-gram.pruned.1e-7.arpa
#        - 4-gram.arpa.gz
#        - 4-gram.arpa
#        - l2arctic-vocab.txt
#        - l2arctic-lexicon.txt
#        - l2arctic-lm-norm.txt.gz
#
#  - $dl_dir/musan
#      This directory contains the following directories downloaded from
#       http://www.openslr.org/17/
#
#     - music
#     - noise
#     - speech
dl_dir=/DB

. shared/parse_options.sh || exit 1

# vocab size for sentence piece models.
# It will generate data/lang_bpe_xxx,
# data/lang_bpe_yyy if the array contains xxx, yyy
vocab_sizes=(
  5000
  2000
  1000
  500
)

# All files generated by this script are saved in "data".
# You can safely remove "data" and rerun this script to regenerate it.
mkdir -p data

log() {
  # This function is from espnet
  local fname=${BASH_SOURCE[1]##*/}
  echo -e "$(date '+%Y-%m-%d %H:%M:%S') (${fname}:${BASH_LINENO[0]}:${FUNCNAME[1]}) $*"
}

log "dl_dir: $dl_dir"

if [ $stage -le 0 ] && [ $stop_stage -ge 0 ]; then
  log "Stage 0: Download data"

  # If you have pre-downloaded it to /path/to/l2arctic,
  # you can create a symlink
  #
  #   ln -sfv /path/to/l2arctic $dl_dir/l2arctic
  #
  if [ ! -d $dl_dir/l2arctic/wav ]; then
    echo "download not supported yet";
  fi

fi

if [ $stage -le 1 ] && [ $stop_stage -ge 1 ]; then
    log "Stage 1: Prepare l2arctic manifest"
    # We assume that you have downloaded the l2arctic corpus (ver 1.1)
    # You need to prepare l2arctic according to data_settings/*_list.txt like below
    # $dl_dir/l2arctic
    # |-- ABA, ..., ZHAA
    # |   |-- wavs
    # |   |   |-- train
    # |   |   |-- dev
    # |   |   |-- test
    # |   |-- texts
    # |   |-- wav
    # |   |-- textgrid
    # |   |-- transcript
    # |   |-- annotation
    # |-- list.txt

    # to $dl_dir/l2arctic
    list=$(cat $dl_dir/l2arctic/list.txt)
    for name in $list; do
        sudo touch $dl_dir/l2arctic/.l2arctic_$name.done
        if [ ! -e $dl_dir/l2arctic/.l2arctic_$name.done ]; then
            for dset in "train" "dev" "test"; do
                log "Resampling l2arctic $dset set"
                file_list=`ls $dl_dir/l2arctic/$name/wavs/$dset/`
                for wavfile in $file_list; do
                    sox -v 0.9 $dl_dir/l2arcti/$name/$dset/$wavfile -r 16000 -e signed-integer $dl_dir/l2arcti/$name/wavs/$dset/tmp_$wavfile
                    mv $dl_dir/l2arcti/$name/$dset/tmp_$wavfile $dl_dir/l2arcti/$name/wavs/$dset/$wavfile
                done
                log "Resampling $dset done"
            done
            sudo touch $dl_dir/l2arctic/.l2arctic_$name.done
        fi

        mkdir -p data/manifests
        if [ ! -e data/manifests/.l2arctic_$name.done ]; then
            python local/prepare_l2arctic.py $dl_dir/l2arctic/$name
            touch data/manifests/.l2arctic_$name.done
        fi

        if [ $stage -le 3 ] && [ $stop_stage -ge 3 ]; then
            log "Stage 3: Compute fbank for l2arctic"
            mkdir -p data/fbank
            if [ ! -e data/fbank/.l2arctic_$name.done ]; then
                ./local/compute_fbank_l2arctic.py --data-dir $dl_dir/l2arctic/$name
                touch data/fbank/.l2arctic_$name.done
            fi
        fi

        log "Validating data/fbank for l2arctic/$name"
        parts=`ls /DB/l2arctic/$name/wavs/ -I *.txt`
        for part in ${parts[@]}; do
            python3 ./local/validate_manifest.py \
                data/fbank/l2arctic_cuts_${name}_${part}.jsonl.gz
        done
    done
fi